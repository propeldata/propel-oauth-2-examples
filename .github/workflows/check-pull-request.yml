name: check-pull-request

on:
  pull_request:

jobs:
  javascript:
    name: Lint and Test JavaScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '18.x', '20.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint  # Your package.json should define a "lint" script
      - run: npm test

  typescript:
    name: Lint and Test TypeScript
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ '18.x', '20.x' ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run lint  # Your package.json should define a "lint" script for TypeScript
      - run: npm test

  python:
    name: Lint and Test Python
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "pypy3.9", "pypy3.10", "3.9", "3.10", "3.11", "3.12" ]

      steps:
        - uses: actions/checkout@v4
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
        - run: pip install flake8 pytest
        - run: flake8 .  # Adjust this command based on how your project is structured
        - run: pytest

  golang:
    name: Lint and Test Go
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.19', '1.20', '1.21.x' ]

      steps:
        - uses: actions/checkout@v4
        - name: Setup Go ${{ matrix.go-version }}
          uses: actions/setup-go@v4
          with:
            go-version: ${{ matrix.go-version }}
            cache: false
        - run: go get -v -t -d ./...
        - run: go build -v ./...
        - name: Run Linter
          uses: golangci/golangci-lint-action@v3
          with:
            version: latest
        - run: go test -v ./...

  dotnet:
    name: Lint and Test .NET
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.x'  # Use the version of .NET that your project uses
      - run: dotnet restore
      - run: dotnet build
      - run: dotnet tool install -g dotnet-format
      - run: dotnet format --check
      - run: dotnet test --no-build --verbosity normal
